// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/add-product" | "/admin-login" | "/alerts" | "/analytics" | "/api-keys" | "/appointments" | "/appointments/space/[id]" | "/avatars" | "/badge" | "/bar-chart" | "/basic-tables" | "/billing" | "/blank" | "/breadcrumb" | "/breathe-move" | "/breathe-move/[id]/editar" | "/breathe-move/class/[id]" | "/breathe-move/nueva" | "/buttons" | "/buttons-group" | "/calendar" | "/camara-hiperbarica" | "/camara-hiperbarica/[id]/editar" | "/camara-hiperbarica/nueva" | "/cards" | "/carousel" | "/chat" | "/citas" | "/citas/nueva" | "/code-generator" | "/coming-soon" | "/consultorios" | "/consultorios/[id]/editar" | "/consultorios/nueva" | "/create-invoice" | "/crm" | "/dashboard" | "/data-tables" | "/dropdowns" | "/error-404" | "/error-500" | "/error-503" | "/faq" | "/file-manager" | "/form-elements" | "/form-layout" | "/image-generator" | "/images" | "/inbox" | "/inbox-details" | "/integrations" | "/invoices" | "/line-chart" | "/links" | "/list" | "/logistics" | "/maintenance" | "/marketing" | "/memberships" | "/modals" | "/notifications" | "/pacientes" | "/pacientes/[id]" | "/pacientes/[id]/editar" | "/pacientes/debug" | "/pacientes/nuevo" | "/pagination" | "/patients" | "/payments" | "/pie-chart" | "/popovers" | "/pricing-tables" | "/products-list" | "/profile" | "/progress-bar" | "/reports" | "/reset-password" | "/ribbons" | "/saas" | "/settings" | "/signin" | "/signup" | "/single-invoice" | "/single-transaction" | "/spinners" | "/stocks" | "/success" | "/sueroterapia" | "/sueroterapia/[id]/editar" | "/sueroterapia/nueva" | "/support-ticket-reply" | "/support-tickets" | "/tabs" | "/task-kanban" | "/task-list" | "/terapias-combinadas" | "/test-connection" | "/text-generator" | "/tooltips" | "/transactions" | "/tratamientos" | "/two-step-verification" | "/video-generator" | "/videos"
type AppRouteHandlerRoutes = "/api/admin/packages" | "/api/admin/patients" | "/api/admin/professionals"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/add-product": {}
  "/admin-login": {}
  "/alerts": {}
  "/analytics": {}
  "/api-keys": {}
  "/api/admin/packages": {}
  "/api/admin/patients": {}
  "/api/admin/professionals": {}
  "/appointments": {}
  "/appointments/space/[id]": { "id": string; }
  "/avatars": {}
  "/badge": {}
  "/bar-chart": {}
  "/basic-tables": {}
  "/billing": {}
  "/blank": {}
  "/breadcrumb": {}
  "/breathe-move": {}
  "/breathe-move/[id]/editar": { "id": string; }
  "/breathe-move/class/[id]": { "id": string; }
  "/breathe-move/nueva": {}
  "/buttons": {}
  "/buttons-group": {}
  "/calendar": {}
  "/camara-hiperbarica": {}
  "/camara-hiperbarica/[id]/editar": { "id": string; }
  "/camara-hiperbarica/nueva": {}
  "/cards": {}
  "/carousel": {}
  "/chat": {}
  "/citas": {}
  "/citas/nueva": {}
  "/code-generator": {}
  "/coming-soon": {}
  "/consultorios": {}
  "/consultorios/[id]/editar": { "id": string; }
  "/consultorios/nueva": {}
  "/create-invoice": {}
  "/crm": {}
  "/dashboard": {}
  "/data-tables": {}
  "/dropdowns": {}
  "/error-404": {}
  "/error-500": {}
  "/error-503": {}
  "/faq": {}
  "/file-manager": {}
  "/form-elements": {}
  "/form-layout": {}
  "/image-generator": {}
  "/images": {}
  "/inbox": {}
  "/inbox-details": {}
  "/integrations": {}
  "/invoices": {}
  "/line-chart": {}
  "/links": {}
  "/list": {}
  "/logistics": {}
  "/maintenance": {}
  "/marketing": {}
  "/memberships": {}
  "/modals": {}
  "/notifications": {}
  "/pacientes": {}
  "/pacientes/[id]": { "id": string; }
  "/pacientes/[id]/editar": { "id": string; }
  "/pacientes/debug": {}
  "/pacientes/nuevo": {}
  "/pagination": {}
  "/patients": {}
  "/payments": {}
  "/pie-chart": {}
  "/popovers": {}
  "/pricing-tables": {}
  "/products-list": {}
  "/profile": {}
  "/progress-bar": {}
  "/reports": {}
  "/reset-password": {}
  "/ribbons": {}
  "/saas": {}
  "/settings": {}
  "/signin": {}
  "/signup": {}
  "/single-invoice": {}
  "/single-transaction": {}
  "/spinners": {}
  "/stocks": {}
  "/success": {}
  "/sueroterapia": {}
  "/sueroterapia/[id]/editar": { "id": string; }
  "/sueroterapia/nueva": {}
  "/support-ticket-reply": {}
  "/support-tickets": {}
  "/tabs": {}
  "/task-kanban": {}
  "/task-list": {}
  "/terapias-combinadas": {}
  "/test-connection": {}
  "/text-generator": {}
  "/tooltips": {}
  "/transactions": {}
  "/tratamientos": {}
  "/two-step-verification": {}
  "/video-generator": {}
  "/videos": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
